#1. **Удалить пробелы и привести строку к нижнему регистру:**
#   - Удалить все пробелы из строки.
#   - Привести все символы строки к нижнему регистру, чтобы учитывать палиндромы независимо от регистра.
#2. **Сравнить строку с её реверсированной версией:**
#   - Создать реверсированную версию строки.
#   - Сравнить оригинальную строку с реверсированной.
#3. **Вернуть результат:**
#   - Если строки совпадают, то исходная строка является палиндромом.
#   - В противном случае строка не является палиндромом.


def is_palindrome(s: str) -> bool:
    """
    Проверяет, является ли строка палиндромом.

    :param s: Входная строка, которую нужно проверить.
    :return: True, если строка является палиндромом, иначе False.
    """
    # Удаляем пробелы и приводим строку к нижнему регистру
    cleaned_str = s.replace(" ", "").lower()

    # Сравниваем строку с её реверсированной версией
    return cleaned_str == cleaned_str[::-1]


# Примеры использования функции
print(is_palindrome("A man a plan a canal Panama"))  # True
print(is_palindrome("Hello World"))  # False
print(is_palindrome("racecar"))  # True
print(is_palindrome("Was it a car or a cat I saw"))  # True